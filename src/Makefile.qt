#############################################################################
# Makefile for building: ords.app/Contents/MacOS/ords
# Generated by qmake (2.01a) (Qt 4.6.2) on: ke kesäkuuta 9 09:04:41 2010
# Project:  ords.pro
# Template: app
# Command: /usr/bin/qmake -spec /usr/local/Qt4.6/mkspecs/macx-g++ -macx -o Makefile.qt ords.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -g -gdwarf-2 -Wall -W $(DEFINES)
CXXFLAGS      = -pipe -g -gdwarf-2 -Wall -W $(DEFINES)
INCPATH       = -I/usr/local/Qt4.6/mkspecs/macx-g++ -I. -I/Library/Frameworks/QtCore.framework/Versions/4/Headers -I/usr/include/QtCore -I/Library/Frameworks/QtGui.framework/Versions/4/Headers -I/usr/include/QtGui -I/usr/include -I. -Iutils -Ifile -Iinit -Idata -Icli -Iqt -I. -F/Library/Frameworks
LINK          = g++
LFLAGS        = -headerpad_max_install_names
LIBS          = $(SUBLIBS) -F/Library/Frameworks -L/Library/Frameworks -framework QtGui -framework QtCore 
AR            = ar cq
RANLIB        = ranlib -s
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = cp -f
COPY_DIR      = cp -f -R
STRIP         = 
INSTALL_FILE  = $(COPY_FILE)
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = $(COPY_FILE)
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p
export MACOSX_DEPLOYMENT_TARGET = 10.4

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = ords.cpp \
		cli/args.cpp \
		cli/args_parser.cpp \
		cli/ui.cpp \
		cli/uifuncs.cpp \
		data/collection.cpp \
		data/conjugation.cpp \
		data/def_term.cpp \
		data/definition.cpp \
		data/dictionary.cpp \
		data/question.cpp \
		data/wrapper.cpp \
		file/file.cpp \
		file/plaintext.cpp \
		file/settings.cpp \
		init/init.cpp \
		qt/qt_main.cpp \
		utils/utils.cpp moc_qt_main.cpp
OBJECTS       = ords.o \
		args.o \
		args_parser.o \
		ui.o \
		uifuncs.o \
		collection.o \
		conjugation.o \
		def_term.o \
		definition.o \
		dictionary.o \
		question.o \
		wrapper.o \
		file.o \
		plaintext.o \
		settings.o \
		init.o \
		qt_main.o \
		utils.o \
		moc_qt_main.o
DIST          = /usr/local/Qt4.6/mkspecs/common/unix.conf \
		/usr/local/Qt4.6/mkspecs/common/mac.conf \
		/usr/local/Qt4.6/mkspecs/common/mac-g++.conf \
		/usr/local/Qt4.6/mkspecs/qconfig.pri \
		/usr/local/Qt4.6/mkspecs/features/qt_functions.prf \
		/usr/local/Qt4.6/mkspecs/features/qt_config.prf \
		/usr/local/Qt4.6/mkspecs/features/exclusive_builds.prf \
		/usr/local/Qt4.6/mkspecs/features/default_pre.prf \
		/usr/local/Qt4.6/mkspecs/features/mac/default_pre.prf \
		/usr/local/Qt4.6/mkspecs/features/mac/dwarf2.prf \
		/usr/local/Qt4.6/mkspecs/features/debug.prf \
		/usr/local/Qt4.6/mkspecs/features/default_post.prf \
		/usr/local/Qt4.6/mkspecs/features/mac/default_post.prf \
		/usr/local/Qt4.6/mkspecs/features/mac/objective_c.prf \
		/usr/local/Qt4.6/mkspecs/features/warn_on.prf \
		/usr/local/Qt4.6/mkspecs/features/qt.prf \
		/usr/local/Qt4.6/mkspecs/features/unix/thread.prf \
		/usr/local/Qt4.6/mkspecs/features/moc.prf \
		/usr/local/Qt4.6/mkspecs/features/mac/rez.prf \
		/usr/local/Qt4.6/mkspecs/features/mac/sdk.prf \
		/usr/local/Qt4.6/mkspecs/features/resources.prf \
		/usr/local/Qt4.6/mkspecs/features/uic.prf \
		/usr/local/Qt4.6/mkspecs/features/yacc.prf \
		/usr/local/Qt4.6/mkspecs/features/lex.prf \
		/usr/local/Qt4.6/mkspecs/features/include_source_dir.prf \
		ords.pro
QMAKE_TARGET  = ords
DESTDIR       = 
TARGET        = ords.app/Contents/MacOS/ords

####### Custom Compiler Variables
QMAKE_COMP_QMAKE_OBJECTIVE_CFLAGS = -pipe \
		-g \
		-gdwarf-2 \
		-Wall \
		-W


first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile.qt ords.app/Contents/PkgInfo ords.app/Contents/Resources/empty.lproj ords.app/Contents/Info.plist $(TARGET)

$(TARGET):  $(OBJECTS)  
	@$(CHK_DIR_EXISTS) ords.app/Contents/MacOS/ || $(MKDIR) ords.app/Contents/MacOS/ 
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile.qt: ords.pro  /usr/local/Qt4.6/mkspecs/macx-g++/qmake.conf /usr/local/Qt4.6/mkspecs/common/unix.conf \
		/usr/local/Qt4.6/mkspecs/common/mac.conf \
		/usr/local/Qt4.6/mkspecs/common/mac-g++.conf \
		/usr/local/Qt4.6/mkspecs/qconfig.pri \
		/usr/local/Qt4.6/mkspecs/features/qt_functions.prf \
		/usr/local/Qt4.6/mkspecs/features/qt_config.prf \
		/usr/local/Qt4.6/mkspecs/features/exclusive_builds.prf \
		/usr/local/Qt4.6/mkspecs/features/default_pre.prf \
		/usr/local/Qt4.6/mkspecs/features/mac/default_pre.prf \
		/usr/local/Qt4.6/mkspecs/features/mac/dwarf2.prf \
		/usr/local/Qt4.6/mkspecs/features/debug.prf \
		/usr/local/Qt4.6/mkspecs/features/default_post.prf \
		/usr/local/Qt4.6/mkspecs/features/mac/default_post.prf \
		/usr/local/Qt4.6/mkspecs/features/mac/objective_c.prf \
		/usr/local/Qt4.6/mkspecs/features/warn_on.prf \
		/usr/local/Qt4.6/mkspecs/features/qt.prf \
		/usr/local/Qt4.6/mkspecs/features/unix/thread.prf \
		/usr/local/Qt4.6/mkspecs/features/moc.prf \
		/usr/local/Qt4.6/mkspecs/features/mac/rez.prf \
		/usr/local/Qt4.6/mkspecs/features/mac/sdk.prf \
		/usr/local/Qt4.6/mkspecs/features/resources.prf \
		/usr/local/Qt4.6/mkspecs/features/uic.prf \
		/usr/local/Qt4.6/mkspecs/features/yacc.prf \
		/usr/local/Qt4.6/mkspecs/features/lex.prf \
		/usr/local/Qt4.6/mkspecs/features/include_source_dir.prf \
		/Library/Frameworks/QtGui.framework/QtGui.prl \
		/Library/Frameworks/QtCore.framework/QtCore.prl
	$(QMAKE) -spec /usr/local/Qt4.6/mkspecs/macx-g++ -macx -o Makefile.qt ords.pro
/usr/local/Qt4.6/mkspecs/common/unix.conf:
/usr/local/Qt4.6/mkspecs/common/mac.conf:
/usr/local/Qt4.6/mkspecs/common/mac-g++.conf:
/usr/local/Qt4.6/mkspecs/qconfig.pri:
/usr/local/Qt4.6/mkspecs/features/qt_functions.prf:
/usr/local/Qt4.6/mkspecs/features/qt_config.prf:
/usr/local/Qt4.6/mkspecs/features/exclusive_builds.prf:
/usr/local/Qt4.6/mkspecs/features/default_pre.prf:
/usr/local/Qt4.6/mkspecs/features/mac/default_pre.prf:
/usr/local/Qt4.6/mkspecs/features/mac/dwarf2.prf:
/usr/local/Qt4.6/mkspecs/features/debug.prf:
/usr/local/Qt4.6/mkspecs/features/default_post.prf:
/usr/local/Qt4.6/mkspecs/features/mac/default_post.prf:
/usr/local/Qt4.6/mkspecs/features/mac/objective_c.prf:
/usr/local/Qt4.6/mkspecs/features/warn_on.prf:
/usr/local/Qt4.6/mkspecs/features/qt.prf:
/usr/local/Qt4.6/mkspecs/features/unix/thread.prf:
/usr/local/Qt4.6/mkspecs/features/moc.prf:
/usr/local/Qt4.6/mkspecs/features/mac/rez.prf:
/usr/local/Qt4.6/mkspecs/features/mac/sdk.prf:
/usr/local/Qt4.6/mkspecs/features/resources.prf:
/usr/local/Qt4.6/mkspecs/features/uic.prf:
/usr/local/Qt4.6/mkspecs/features/yacc.prf:
/usr/local/Qt4.6/mkspecs/features/lex.prf:
/usr/local/Qt4.6/mkspecs/features/include_source_dir.prf:
/Library/Frameworks/QtGui.framework/QtGui.prl:
/Library/Frameworks/QtCore.framework/QtCore.prl:
qmake:  FORCE
	@$(QMAKE) -spec /usr/local/Qt4.6/mkspecs/macx-g++ -macx -o Makefile.qt ords.pro

ords.app/Contents/PkgInfo: 
	@$(CHK_DIR_EXISTS) ords.app/Contents || $(MKDIR) ords.app/Contents 
	@$(DEL_FILE) ords.app/Contents/PkgInfo
	@echo "APPL????" >ords.app/Contents/PkgInfo
ords.app/Contents/Resources/empty.lproj: 
	@$(CHK_DIR_EXISTS) ords.app/Contents/Resources || $(MKDIR) ords.app/Contents/Resources 
	@touch ords.app/Contents/Resources/empty.lproj
	
ords.app/Contents/Info.plist: 
	@$(CHK_DIR_EXISTS) ords.app/Contents || $(MKDIR) ords.app/Contents 
	@$(DEL_FILE) ords.app/Contents/Info.plist
	@sed -e "s,@ICON@,,g" -e "s,@EXECUTABLE@,ords,g" -e "s,@TYPEINFO@,????,g" /usr/local/Qt4.6/mkspecs/macx-g++/Info.plist.app >ords.app/Contents/Info.plist
dist: 
	@$(CHK_DIR_EXISTS) .tmp/ords1.0.0 || $(MKDIR) .tmp/ords1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/ords1.0.0/ && $(COPY_FILE) --parents cli/args.h cli/args_parser.h cli/ui.h cli/uifuncs.h data/collection.h data/conjugation.h data/def_term.h data/definition.h data/dictionary.h data/question.h data/wrapper.h file/file.h file/plaintext.h file/settings.h init/init.h qt/qt_main.h utils/using.h utils/utils.h .tmp/ords1.0.0/ && $(COPY_FILE) --parents ords.cpp cli/args.cpp cli/args_parser.cpp cli/ui.cpp cli/uifuncs.cpp data/collection.cpp data/conjugation.cpp data/def_term.cpp data/definition.cpp data/dictionary.cpp data/question.cpp data/wrapper.cpp file/file.cpp file/plaintext.cpp file/settings.cpp init/init.cpp qt/qt_main.cpp utils/utils.cpp .tmp/ords1.0.0/ && (cd `dirname .tmp/ords1.0.0` && $(TAR) ords1.0.0.tar ords1.0.0 && $(COMPRESS) ords1.0.0.tar) && $(MOVE) `dirname .tmp/ords1.0.0`/ords1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/ords1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) -r ords.app
	-$(DEL_FILE) Makefile.qt


mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_objective_c_make_all:
compiler_objective_c_clean:
compiler_moc_header_make_all: moc_qt_main.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_qt_main.cpp
moc_qt_main.cpp: utils/utils.h \
		utils/using.h \
		qt/qt_main.h
	/Developer/Tools/Qt/moc $(DEFINES) $(INCPATH) -D__APPLE__ -D__GNUC__ qt/qt_main.h -o moc_qt_main.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_rez_source_make_all:
compiler_rez_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

ords.o: ords.cpp utils/utils.h \
		utils/using.h \
		file/file.h \
		file/plaintext.h \
		init/init.h \
		data/collection.h \
		data/definition.h \
		data/def_term.h \
		data/dictionary.h \
		file/settings.h \
		data/wrapper.h \
		data/conjugation.h \
		data/question.h \
		cli/args.h \
		cli/args_parser.h \
		cli/uifuncs.h \
		cli/ui.h \
		qt/qt_main.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ords.o ords.cpp

args.o: cli/args.cpp cli/args.h \
		utils/utils.h \
		utils/using.h \
		file/file.h \
		file/plaintext.h \
		file/settings.h \
		cli/args_parser.h \
		cli/uifuncs.h \
		data/collection.h \
		data/definition.h \
		data/def_term.h \
		data/dictionary.h \
		data/wrapper.h \
		data/conjugation.h \
		data/question.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o args.o cli/args.cpp

args_parser.o: cli/args_parser.cpp cli/args_parser.h \
		utils/utils.h \
		utils/using.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o args_parser.o cli/args_parser.cpp

ui.o: cli/ui.cpp cli/ui.h \
		utils/utils.h \
		utils/using.h \
		cli/uifuncs.h \
		data/collection.h \
		data/definition.h \
		data/def_term.h \
		data/dictionary.h \
		file/file.h \
		file/plaintext.h \
		file/settings.h \
		data/wrapper.h \
		data/conjugation.h \
		data/question.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ui.o cli/ui.cpp

uifuncs.o: cli/uifuncs.cpp cli/uifuncs.h \
		utils/utils.h \
		utils/using.h \
		data/collection.h \
		data/definition.h \
		data/def_term.h \
		data/dictionary.h \
		file/file.h \
		file/plaintext.h \
		file/settings.h \
		data/wrapper.h \
		data/conjugation.h \
		data/question.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o uifuncs.o cli/uifuncs.cpp

collection.o: data/collection.cpp data/collection.h \
		utils/using.h \
		data/definition.h \
		utils/utils.h \
		data/def_term.h \
		data/dictionary.h \
		file/file.h \
		file/plaintext.h \
		file/settings.h \
		data/wrapper.h \
		data/conjugation.h \
		data/question.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o collection.o data/collection.cpp

conjugation.o: data/conjugation.cpp data/conjugation.h \
		utils/utils.h \
		utils/using.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o conjugation.o data/conjugation.cpp

def_term.o: data/def_term.cpp data/def_term.h \
		utils/utils.h \
		utils/using.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o def_term.o data/def_term.cpp

definition.o: data/definition.cpp data/definition.h \
		utils/utils.h \
		utils/using.h \
		data/def_term.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o definition.o data/definition.cpp

dictionary.o: data/dictionary.cpp data/dictionary.h \
		utils/utils.h \
		utils/using.h \
		file/file.h \
		file/plaintext.h \
		file/settings.h \
		data/wrapper.h \
		data/conjugation.h \
		data/definition.h \
		data/def_term.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o dictionary.o data/dictionary.cpp

question.o: data/question.cpp data/question.h \
		data/dictionary.h \
		utils/utils.h \
		utils/using.h \
		file/file.h \
		file/plaintext.h \
		file/settings.h \
		data/wrapper.h \
		data/conjugation.h \
		data/definition.h \
		data/def_term.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o question.o data/question.cpp

wrapper.o: data/wrapper.cpp data/wrapper.h \
		utils/utils.h \
		utils/using.h \
		data/conjugation.h \
		data/definition.h \
		data/def_term.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o wrapper.o data/wrapper.cpp

file.o: file/file.cpp file/file.h \
		utils/utils.h \
		utils/using.h \
		file/plaintext.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o file.o file/file.cpp

plaintext.o: file/plaintext.cpp file/plaintext.h \
		utils/using.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o plaintext.o file/plaintext.cpp

settings.o: file/settings.cpp file/settings.h \
		utils/utils.h \
		utils/using.h \
		file/file.h \
		file/plaintext.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o settings.o file/settings.cpp

init.o: init/init.cpp init/init.h \
		utils/utils.h \
		utils/using.h \
		data/collection.h \
		data/definition.h \
		data/def_term.h \
		data/dictionary.h \
		file/file.h \
		file/plaintext.h \
		file/settings.h \
		data/wrapper.h \
		data/conjugation.h \
		data/question.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o init.o init/init.cpp

qt_main.o: qt/qt_main.cpp qt/qt_main.h \
		utils/utils.h \
		utils/using.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qt_main.o qt/qt_main.cpp

utils.o: utils/utils.cpp utils/utils.h \
		utils/using.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o utils.o utils/utils.cpp

moc_qt_main.o: moc_qt_main.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_qt_main.o moc_qt_main.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

